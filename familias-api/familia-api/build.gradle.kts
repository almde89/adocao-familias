/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id("br.co.familias.java-application-conventions")
    war
}

val tag = "v1"
version = "1.0.0"

sourceSets {
    create("integrationTest") {
        compileClasspath += sourceSets.main.get().output
        runtimeClasspath += sourceSets.main.get().output
    }
}

val integrationTestImplementation: Configuration by configurations.getting {
    extendsFrom(configurations.implementation.get())
    extendsFrom(configurations.testImplementation.get())
}

configurations["integrationTestRuntimeOnly"].extendsFrom(configurations.runtimeOnly.get())
configurations["integrationTestRuntimeOnly"].extendsFrom(configurations.testRuntimeOnly.get())

dependencies {
    implementation(project(":infrastructure"))
    implementation(project(":model"))
    integrationTestImplementation("org.microshed", "microshed-testing-testcontainers", "0.9.1")
    integrationTestImplementation("org.microshed", "microshed-testing-payara-micro", "0.9.1")
}

tasks {
    register<Exec>("buildContainerImage") {
        val tag = "dunmait/moa:$tag"
        dependsOn(":app:assemble")
        commandLine("docker", "build", "-t", tag, ".")
    }

    register<Test>("integrationTest") {
        description = "Run integration tests."
        group = "verification"

        testClassesDirs = sourceSets["integrationTest"].output.classesDirs
        classpath = sourceSets["integrationTest"].runtimeClasspath
        shouldRunAfter("test")
        useJUnitPlatform()
    }

    processResources {
        expand("projectPath" to project(":environment").path)
    }
}

tasks["integrationTest"].dependsOn("war")